import type { moduleFederationPlugin } from '@module-federation/sdk';
import type { Rspack } from '@rsbuild/core';
type OptimizationConfig = Rspack.Configuration['optimization'];
type SplitChunksConfig = NonNullable<OptimizationConfig>['splitChunks'];
export declare function autoDeleteSplitChunkCacheGroups(mfConfig: moduleFederationPlugin.ModuleFederationPluginOptions, splitChunks: SplitChunksConfig): {
    name?: string | false | ((args_0: Rspack.Module | undefined, ...args: unknown[]) => unknown) | undefined;
    chunks?: RegExp | "all" | "initial" | "async" | ((args_0: Rspack.Chunk, ...args: unknown[]) => boolean) | undefined;
    usedExports?: boolean | undefined;
    maxSize?: number | Record<string, number> | undefined;
    defaultSizeTypes?: string[] | undefined;
    minChunks?: number | undefined;
    minSize?: number | Record<string, number> | undefined;
    maxAsyncSize?: number | Record<string, number> | undefined;
    maxInitialSize?: number | Record<string, number> | undefined;
    maxAsyncRequests?: number | undefined;
    maxInitialRequests?: number | undefined;
    automaticNameDelimiter?: string | undefined;
    cacheGroups?: Record<string, false | {
        type?: string | RegExp | undefined;
        filename?: string | undefined;
        name?: string | false | ((args_0: Rspack.Module | undefined, ...args: unknown[]) => unknown) | undefined;
        priority?: number | undefined;
        chunks?: RegExp | "all" | "initial" | "async" | ((args_0: Rspack.Chunk, ...args: unknown[]) => boolean) | undefined;
        usedExports?: boolean | undefined;
        test?: string | RegExp | ((args_0: Rspack.Module, ...args: unknown[]) => unknown) | undefined;
        enforce?: boolean | undefined;
        maxSize?: number | Record<string, number> | undefined;
        reuseExistingChunk?: boolean | undefined;
        idHint?: string | undefined;
        defaultSizeTypes?: string[] | undefined;
        minChunks?: number | undefined;
        minSize?: number | Record<string, number> | undefined;
        maxAsyncSize?: number | Record<string, number> | undefined;
        maxInitialSize?: number | Record<string, number> | undefined;
        maxAsyncRequests?: number | undefined;
        maxInitialRequests?: number | undefined;
        automaticNameDelimiter?: string | undefined;
    }> | undefined;
    fallbackCacheGroup?: {
        chunks?: RegExp | "all" | "initial" | "async" | ((args_0: Rspack.Chunk, ...args: unknown[]) => boolean) | undefined;
        maxSize?: number | undefined;
        minSize?: number | undefined;
        maxAsyncSize?: number | undefined;
        maxInitialSize?: number | undefined;
        automaticNameDelimiter?: string | undefined;
    } | undefined;
    hidePathInfo?: boolean | undefined;
} | undefined;
export {};
